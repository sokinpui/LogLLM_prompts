{
    "logllm": {
        "__main__": {},
        "agents": {
            "parser_agent": {
                "SimpleDrainLogParserState": {},
                "SimpleDrainLogParserAgent": {
                    "run": "no prompts",
                    "_generate_log_format": "Drain is a log parsing tool that uses a log format string to tokenize log messages into structured fields. A Drain log format string consists of tags in angle brackets (e.g., <Date>, <Time>, <Level>, <Component>, <Content>) that represent the static parts of a log message. These tags help Drain identify the structure of the log, while variable parts (e.g., IP addresses, numbers, or dynamic content) are automatically handled by Drain's regular expressions and should be included in a generic <Content> tag or a specific tag if the field is consistent across logs.\n\nCommon Drain tags include:\n- <Date>: For date fields (e.g., \"2023-10-01\").\n- <Time>: For time fields (e.g., \"14:30:45\").\n- <Level>: For log levels (e.g., \"INFO\", \"ERROR\").\n- <Component>: For the source or module (e.g., \"Server\", \"Client\").\n- <PID>: For process IDs (e.g., \"12345\").\n- <Content>: For the main message or variable content (e.g., \"User logged in\").\n\nFor example:\n- Log message: \"2023-10-01 14:30:45 INFO Server User logged in\"\n  Log format: \"<Date> <Time> <Level> <Component> <Content>\"\n\nBelow are some sample log messages:\n\n{sample_logs}\n\nBased on the sample logs above, generate a Drain log format string that captures the static structure of the logs. Use appropriate tags for consistent fields (e.g., <Date>, <Time>, <Level>) and <Content> for variable or message content. Ensure the format string includes all static parts (including literal characters like brackets or colons if they are consistent across logs). Output only the log format string, without any additional text or explanations.\n\nExample output: \"<Date> <Time> <Level> <Component> <Content>\"\n",
                    "_run_drain_parser": "no prompts"
                },
                "GroupLogParserAgent": {
                    "fetch_groups": "no prompts",
                    "parse_all_logs": "no prompts",
                    "_update_progress_bar": "no prompts",
                    "run": "no prompts"
                },
                "schema": {}
            },
            "agent_abc": {
                "Agent": {
                    "_build_graph": "no prompts",
                    "run": "no prompts"
                }
            }
        }
    }
}